% ========================================== Einleitung  ===========================================

% ========================================== Grundlagen  ===========================================

% =========================================== Analyse  =============================================
% ========================================= Spielregeln  ===========================================

% German: https://lookout-spiele.de/upload/de_patchwork.html_Regeln_Patchwork_DE.pdf (original)
% English: https://lookout-spiele.de/wp-content/uploads/Patchwork_Rules_US.pdf
@misc{2014.PatchworkSpielanleitung,
  title        = {Patchwork (Spielanleitung)},
  author       = {Rosenberg, Uwe},
  year         = 2014,
  publisher    = {Lookout GmbH},
  address      = {Hiddigwarder Straße 37, 27804 Berne, Deutschland},
  urldate      = {2024-01-16},
  howpublished = {\url{https://lookout-spiele.de/upload/de_patchwork.html_Regeln_Patchwork_DE.pdf}},
  language     = {de}
}

@misc{2014.Discussion7x7,
  title        = {7x7 tile... | BoardGameGeek},
  author       = {Kobiela, Grzegorz and Koh, Kareem and Poplawski, Michael and others},
  year         = 2014,
  address      = {o.O.},
  urldate      = {2024-01-19},
  howpublished = {\url{https://boardgamegeek.com/thread/1267859/7x7-tile}},
  language     = {en}
}

@misc{2014.DiscussionSpecialPatch,
  title        = {Can't put 1x1 patch? What happens | BoardGameGeek},
  author       = {Kobiela, Grzegorz and Liu, Jack and others},
  year         = 2016,
  address      = {o.O.},
  urldate      = {2024-01-19},
  howpublished = {\url{https://boardgamegeek.com/thread/1538861/article/23157792}},
  language     = {en}
}

% ========================================= Spielanalyse ===========================================
@book{2014.GameTheoryThroughExamples,
  title      = {Game Theory Through Examples},
  doi        = {10.5948/9781614441151},
  isbn       = 9781614441151,
  author     = {Prisner, Erich},
  year       = 2014,
  month      = 10,
  publisher  = {Mathematical Association of America},
  address    = {Providence, Rhode Island},
  series     = {Classroom Resource Materials},
  collection = {Classroom Resource Materials}
}

@book{2018.ReinforcementLearning,
  title     = {Reinforcement Learning},
  isbn      = {978-0262039246},
  author    = {Sutton, Richard S and Barto, Andrew G},
  year      = 2018,
  month     = 9,
  publisher = {Bradford Books},
  address   = {Cambridge, MA},
  series    = {Adaptive Computation and Machine Learning series},
  edition   = 2
}

% https://people.csail.mit.edu/brooks/idocs/Samuel.pdf
@misc{1959.GameTheoryStudiesCheckers,
  title     = {Some Studies in Machine Learning Using the Game of Checkers},
  doi       = {10.1147/rd.33.0210},
  author    = {Samuel, A. L.},
  year      = 1959,
  month     = 7,
  journal   = {IBM Journal of Research and Development},
  publisher = {Ibm},
  volume    = 3,
  number    = 3,
  pages     = {210–229},
  url       = {http://dx.doi.org/10.1147/rd.33.0210}
}

@book{2015.AbstractAlgebra,
  title     = {Contemporary Abstract Algebra},
  isbn      = {978-1305657960},
  author    = {Gallian, Joseph A},
  year      = 2015,
  month     = 9,
  publisher = {CENGAGE Learning Custom Publishing},
  address   = {Mason, OH},
  edition   = 9
}

% https://project.dke.maastrichtuniversity.nl/games/files/phd/SearchingForSolutions.pdf
@phdthesis{1194.SearchAndAiInGames,
  title     = {Searching for solutions in games and artificial intelligence},
  isbn      = 9090074880,
  doi       = {10.26481/dis.19940923la},
  author    = {Allis, Louis Victor},
  year      = 1994,
  month     = 1,
  day       = 1,
  language  = en,
  publisher = {Rijksuniversiteit Limburg},
  school    = {Maastricht University}
}

@misc{2019.GameTreeComplexityEstimation,
  title         = {An estimation method for game complexity},
  author        = {Yong, Alexander and Yong, David},
  year          = {2019},
  eprint        = {1901.11161},
  archiveprefix = {arXiv},
  primaryclass  = {math.HO}
}

@inproceedings{2008.ParallelMCTS,
  author    = {Chaslot, Guillaume M. J. -B.
               and Winands, Mark H. M.
               and van den Herik, H. Jaap},
  editor    = {van den Herik, H. Jaap
               and Xu, Xinhe
               and Ma, Zongmin
               and Winands, Mark H. M.},
  title     = {Parallel Monte-Carlo Tree Search},
  booktitle = {Computers and Games},
  year      = {2008},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {60--71},
  abstract  = {Monte-Carlo Tree Search (MCTS) is a new best-first search method that started a revolution in the field of Computer Go. Parallelizing MCTS is an important way to increase the strength of any Go program. In this article, we discuss three parallelization methods for MCTS: leaf parallelization, root parallelization, and tree parallelization. To be effective tree parallelization requires two techniques: adequately handling of (1) local mutexes and (2) virtual loss. Experiments in 13{\texttimes}13 Go reveal that in the program Mango root parallelization may lead to the best results for a specific time setting and specific program parameters. However, as soon as the selection mechanism is able to handle more adequately the balance of exploitation and exploration, tree parallelization should have attention too and could become a second choice for parallelizing MCTS. Preliminary experiments on the smaller 9{\texttimes}9 board provide promising prospects for tree parallelization.},
  isbn      = {978-3-540-87608-3}
}

@inbook{2009.ComputerGoMCTS,
  author    = {Chen, Keh-Hsun
               and Du, Dawei
               and Zhang, Peigang},
  editor    = {Ras, Zbigniew W.
               and Ribarsky, William},
  title     = {Monte-Carlo Tree Search and Computer Go},
  booktitle = {Advances in Information and Intelligent Systems},
  year      = {2009},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {201--225},
  abstract  = {The difficulty in positional evaluation and the large branching factor have made Go the most challenging board game for AI research. The classic full-board game-tree search paradigm has been powerless on Go even though this classic paradigm has produced programs with expert level performances in many other games. Three decades of research on knowledge and search did not push computer Go above intermediate amateur level. The emerging Monte-Carlo Tree Search (MCTS) paradigm is bringing an exciting breakthrough in computer Go toward challenging human experts, especially on smaller Go boards. This chapter gives an overview of both classical and MCTS approaches to computer Go.},
  isbn      = {978-3-642-04141-9},
  doi       = {10.1007/978-3-642-04141-9_10},
  url       = {https://doi.org/10.1007/978-3-642-04141-9_10}
}

@inproceedings{2013.MCTSAndMinimaxHybrids,
  author    = {Baier, Hendrik and Winands, Mark H. M.},
  booktitle = {2013 IEEE Conference on Computational Inteligence in Games (CIG)},
  title     = {Monte-Carlo Tree Search and minimax hybrids},
  year      = {2013},
  volume    = {},
  number    = {},
  pages     = {1-8},
  keywords  = {Games;Monte Carlo methods;Backpropagation;Planning;Convergence;Propagation losses;Game theory},
  doi       = {10.1109/CIG.2013.6633630}
}


% ========================================= Modellierung  ==========================================